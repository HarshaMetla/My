name: Security Scan
on: [push]


jobs:
  depchecktest:
    runs-on: ubuntu-latest
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
         maven-version: 3.8.2
      - name: Maven
        run: mvn clean package -f pom.xml
     
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'Hello1'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
           
  job_1:
   needs: depchecktest
   name: Sonar Cloud
   runs-on: ubuntu-latest
   steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=HarshaMetla_My
  job_2:
    name: building nmap image and pushing into repository
    needs: job_1
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image of namp
      run: docker build -t nmapimage .
    - name: uploading12345
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: harshametla/docker_image
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  job_3:
    name:  building sqlmap image and pushing into repository
    needs: job_1
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image of sqlmap
      run: docker build -f Dockerfile_sqlmap .
    - name: uploading
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: harshametla/new
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  deploy:
    needs: job_1
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*'
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v20
      with:
      
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: Hello1
        environment_name: Hello1-env
        version_label: 123489
        region: "ap-south-1"
        deployment_package: deploy.zip

